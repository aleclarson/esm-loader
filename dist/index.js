import E from"path";import{fileURLToPath as h,pathToFileURL as F}from"url";import{installSourceMapSupport as R,compareNodeVersion as g,resolveTsPath as U,transform as P,transformDynamicImport as T}from"@esbuild-kit/core-utils";import{parseTsconfig as W,getTsconfig as D,createPathsMatcher as I}from"get-tsconfig";import k from"fs";const m=new Map;async function J(t){if(m.has(t))return m.get(t);if(!await k.promises.access(t).then(()=>!0,()=>!1)){m.set(t,void 0);return}const n=await k.promises.readFile(t,"utf8");try{const o=JSON.parse(n);return m.set(t,o),o}catch{throw new Error(`Error parsing: ${t}`)}}async function A(t){let s=new URL("package.json",t);for(;!s.pathname.endsWith("/node_modules/package.json");){const n=h(s),o=await J(n);if(o)return o;const e=s;if(s=new URL("../package.json",s),s.pathname===e.pathname)break}}async function L(t){var s;const n=await A(t);return(s=n==null?void 0:n.type)!=null?s:"commonjs"}const p=R(),f=process.env.ESBK_TSCONFIG_PATH?{path:process.env.ESBK_TSCONFIG_PATH,config:W(process.env.ESBK_TSCONFIG_PATH)}:D(),S=f==null?void 0:f.config,l=f&&I(f),w="file://",d=/\.([cm]?ts|[tj]sx)$/,v=t=>{const s=E.extname(t);if(s===".json")return"json";if(s===".mjs"||s===".mts")return"module";if(s===".cjs"||s===".cts")return"commonjs"},j=t=>{const s=v(t);if(s)return s;if(d.test(t))return L(t)},M=[".js",".json",".ts",".tsx",".jsx"];async function y(t,s,n){let o;for(const e of M)try{return await u(t+e,s,n,!0)}catch(r){if(o===void 0){const{message:a}=r;r.message=r.message.replace(`${e}'`,"'"),r.stack=r.stack.replace(a,r.message),o=r}}throw o}async function N(t,s,n){const o=t.endsWith("/"),e=o?"index":"/index";try{return await y(t+e,s,n)}catch(r){if(!o)try{return await y(t,s,n)}catch{}const{message:a}=r;throw r.message=r.message.replace(`${e.replace("/",E.sep)}'`,"'"),r.stack=r.stack.replace(a,r.message),r}}const x=/^\.{0,2}\//,C=g([14,13,1])>=0||g([12,20,0])>=0,u=async function(t,s,n,o){var e;if(!C&&t.startsWith("node:")&&(t=t.slice(5)),t.endsWith("/"))return await N(t,s,n);const r=t.startsWith(w)||x.test(t);if(l&&!r&&!((e=s.parentURL)!=null&&e.includes("/node_modules/"))){const c=l(t);for(const i of c)try{return await u(F(i).toString(),s,n)}catch{}}if(d.test(s.parentURL)){const c=U(t);if(c)try{return await u(c,s,n,!0)}catch(i){const{code:_}=i;if(_!=="ERR_MODULE_NOT_FOUND"&&_!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw i}}let a;try{a=await n(t,s,n)}catch(c){if(c instanceof Error&&!o){if(c.code==="ERR_UNSUPPORTED_DIR_IMPORT")return await N(t,s,n);if(c.code==="ERR_MODULE_NOT_FOUND")return await y(t,s,n)}throw c}return!a.format&&a.url.startsWith(w)&&(a.format=await j(a.url)),a},K=async function(t,s,n){process.send&&process.send({type:"dependency",path:t}),t.endsWith(".json")&&(s.importAssertions||(s.importAssertions={}),s.importAssertions.type="json");const o=await n(t,s,n);if(!o.source)return o;const e=t.startsWith("file://")?h(t):t,r=o.source.toString();if(o.format==="json"||d.test(t)){const a=await P(r,e,{tsconfigRaw:S});return{format:"module",source:p(a,t)}}if(o.format==="module"){const a=T(e,r);a&&(o.source=p(a,t))}return o},b=async function(t,s,n){if(t.endsWith(".json"))return{format:"module"};try{return await n(t,s,n)}catch(o){if(o.code==="ERR_UNKNOWN_FILE_EXTENSION"&&t.startsWith(w)){const e=await j(t);if(e)return{format:e}}throw o}},H=async function(t,s,n){const{url:o}=s,e=o.startsWith("file://")?h(o):o;if(process.send&&process.send({type:"dependency",path:o}),o.endsWith(".json")||d.test(o)){const a=await P(t.toString(),e,{tsconfigRaw:S});return{source:p(a,o)}}const r=await n(t,s,n);if(s.format==="module"){const a=T(e,r.source.toString());a&&(r.source=p(a,o))}return r},O=g([16,12,0])<0,$=O?b:void 0,B=O?H:void 0;export{$ as getFormat,K as load,u as resolve,B as transformSource};
